async function sleep(n){return new Promise((e=>setTimeout(e,n)))}async function randomSleep(n,e){await sleep(Math.floor(Math.random()*(e-n))+n)}async function displayStartupMessages(){console.log("Starting up..."),await randomSleep(500,2e3),console.log("Initializing intercept module..."),await randomSleep(500,2e3),console.log("Scanning network traffic..."),await randomSleep(500,2e3),console.log("Injecting benign packets..."),await randomSleep(500,2e3),console.log("Ready to intercept communications."),await randomSleep(500,2e3)}async function displayEndMessages(){await sleep(2e3),console.log("WARNING: Connection lost!"),await sleep(500),console.log("Attempting to reconnect...");for(let n=0;n<3;n++)console.log(`Attempt ${n+1}/3...`),await sleep(2e3);console.log("Unable to reestablish connection. Exiting...")}async function getLogsAsJson(){const n=await fetch("http://localhost:8080/mitm");return await n.json()}const intervalMin=100,intervalMax=2e3;async function displayLogs(n){const e=n.length;for(let a=0;a<e;a++)console.log({...JSON.parse(n[a]),time:(new Date).toISOString()}),await randomSleep(intervalMin,intervalMax)}async function getAndDisplayLogs(){const n=await getLogsAsJson();await displayLogs(n)}async function main(){await displayStartupMessages(),await getAndDisplayLogs(),await displayEndMessages()}main();